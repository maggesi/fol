%%% ===========================================================================
%%% Chapter Introduction.
%%% ===========================================================================

%% ----------------------------------------------------------------------------
%% Debug.
%% ----------------------------------------------------------------------------

spy P :-
  print "entering" P,
  (P, print "exit" P;
   print "fail" P, fail).

%% ----------------------------------------------------------------------------
%% A simple algebraic type for expressions.
%% ----------------------------------------------------------------------------

kind expr       type.
type const      int -> expr.
type add, mul   expr -> expr -> expr.

%% ----------------------------------------------------------------------------
%% One step of symplification.
%% ----------------------------------------------------------------------------

pred simplify1 i:expr, o:expr.
simplify1 (add (const M) (const N)) (const P) :- !, P is M + N.
simplify1 (mul (const M) (const N)) (const P) :- !, P is M * N.
simplify1 (add (const 0) X) X :- !.
simplify1 (add X (const 0)) X :- !.
simplify1 (mul (const 0) _) (const 0) :- !.
simplify1 (mul _ (const 0)) (const 0) :- !.
simplify1 (mul (const 1) X) X :- !.
simplify1 (mul X (const 1)) X :- !.
simplify1 X X.

%% ----------------------------------------------------------------------------
%% Main simplification function.
%% ----------------------------------------------------------------------------

pred simplify i:expr, o:expr.
simplify (add X Y) Z :- !, simplify1 (add {simplify X} {simplify Y}) Z.
simplify (mul X Y) Z :- !, simplify1 (mul {simplify X} {simplify Y}) Z.
simplify X X.

%% ----------------------------------------------------------------------------
%% Tests.
%% ----------------------------------------------------------------------------

test In Out :-
  N is 0 - 2,
  In = mul (add (const 6) (mul (const N) (const 3))) X_,
  simplify In Out.

test In Out :-
  N is 0 - 1,
  In = mul (add (const 3) (mul (const N) (const 2))) X_,
  simplify In Out.
